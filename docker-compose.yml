version: "3.7"

services:
  postgres:
    image: postgres:13-alpine
    container_name: postgres_movies
    env_file:
      - db.env
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - movies_network

  django:
    build:
      context: movies_admin
      dockerfile: Dockerfile
    container_name: django_movies
    env_file:
      - all.env
    volumes:
      - static_volume:/data/static
    networks:
      - movies_network
    command: python manage.py runserver 0.0.0.0:8000
    depends_on:
      - postgres

  nginx:
    image: nginx:1.19.2
    container_name: nginx_movies
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - static_volume:/data:ro
    ports:
      - "8000:8000"
      - "5000:5000"
      - "80:80"
    networks:
      - movies_network
    depends_on:
      - django

  elastic:
    #Порсьба выбрать нужный контейнер, но не удалять второй и третий
    image: elasticsearch:7.14.0
    #image: docker.elastic.co/elasticsearch/elasticsearch:7.15.1-arm64
    container_name: elastic_movies
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
    networks:
      - movies_network
    depends_on:
      - postgres

  etl:
    build:
      context: postgres_to_es
      dockerfile: Dockerfile
    container_name: etl_movies
    volumes:
      - ./postgres_to_es:/code
    networks:
      - movies_network
    command: python etl.py
    depends_on:
      - postgres
      - elastic

  redis:
    build:
      context: redis
      dockerfile: Dockerfile
    container_name: redis_movies
    volumes:
      - ./redis/conf/etc:/usr/local/etc/redis
    #ports:
    #  - "6379:6379"
    networks:
      - movies_network
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]

  fast_api:
    build:
      context: fast_api
      dockerfile: Dockerfile
    container_name: fast_api_movies
    env_file:
      - fa.env
    volumes:
      - ./fast_api:/fast_api:ro
    networks:
      - movies_network
    command: ["python", "main.py"]
    depends_on:
      - elastic
      - redis

  flask_auth_api:
    build:
      context: auth_api/flask_app
      dockerfile: Dockerfile
    container_name: flask_auth_api
    env_file:
      - auth.env
    volumes:
      - ./auth_api/flask_app:/auth_api/flask_app
    networks:
      - movies_network
    depends_on:
      - postgres_auth
      - redis_auth

  postgres_auth:
    image: postgres:13-alpine
    container_name: postgres_auth
    env_file:
      - db_auth.env
    volumes:
      - ./auth_api/postgres_auth/pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - movies_network

  redis_auth:
    build:
      context: auth_api/redis_auth
      dockerfile: Dockerfile
    container_name: redis_auth
    volumes:
      - ./auth_api/redis_auth/conf/etc:/usr/local/etc/redis
    #ports:
    #- "6379:6379"
    networks:
      - movies_network
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]

volumes:
  static_volume:

networks:
  movies_network:
